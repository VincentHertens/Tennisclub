<UserControl x:Class="Tennisclub_UI.Views.MemberRolesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:utils="clr-namespace:Tennisclub_UI.Validations"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="1400" Background="#36393f" Foreground="White">

    <UserControl.Resources>
        <Style x:Key="tabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="#292b2f"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="15 4"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#40444b"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#292b2f"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 0 0 10"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="125"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"  Value="#40444b"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background"  Value="#5c6fb1"/>
                                <Setter Property="Foreground"  Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#40444b"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="textBoxAddStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource errorTemplate}"/>
        </Style>
        <sys:String x:Key="requiredRegex">^\s*$</sys:String>
        <Style x:Key="listBoxItem" TargetType="ListBoxItem">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#5c6fb1"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>

        <TabControl Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3" Background="#36393f" BorderThickness="0">
            <TabItem x:Name="SpecificRolesTabItem" Header="Specific Roles" Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="1" Grid.Column="1" Text="Members with specific roles" FontSize="28" FontWeight="Bold" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2"/>

                    <DataGrid x:Name="SpecificRolesListDataGrid"
                              Grid.Row="2"
                              Grid.Column="1"
                              GridLinesVisibility="None" 
                              Margin="0,15,15,15"
                              CanUserAddRows="False"
                              AutoGenerateColumns="False"
                              BorderThickness="0"
                              SelectionMode="Single"
                              HeadersVisibility="Column"
                              CanUserResizeRows="False"                             
                              ColumnWidth="*" 
                              Background="White">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#5c6fb1"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="FederationNr" Binding="{Binding Member.FederationNr}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="First Name" Binding="{Binding Member.FirstName}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Last Name" Binding="{Binding Member.LastName}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Role" Binding="{Binding Role.Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Start Date" Binding="{Binding StartDate, StringFormat=dd/MM/yyyy}" IsReadOnly="True"/>
                            <DataGridTemplateColumn Header="End Date" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding EndDate, StringFormat=dd/MM/yyyy}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker>
                                            <DatePicker.SelectedDate>
                                                <Binding Path="EndDate" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <utils:DateTimeValidationRule ValidatesOnTargetUpdated="True"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </DatePicker.SelectedDate>
                                        </DatePicker>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Vertical" Margin="0,15,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Select roles" Grid.Row="0" Foreground="White" Margin="0,0,0,5" FontWeight="Bold" FontSize="16"/>

                            <ListBox x:Name="SpecificRolesListBox" Grid.Row="1" SelectionMode="Multiple" Height="400" Width="150" ItemContainerStyle="{StaticResource listBoxItem}" Loaded="SpecificRolesListBox_Loaded" SelectionChanged="SpecificRolesListBox_SelectionChanged">

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding Name}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <Button x:Name="SpecificRolesUpdateButton" Content="Update" Grid.Row="2" Margin="0,15,0,0" HorizontalAlignment="Stretch" Width="auto" Click="SpecificRolesUpdateButton_Click">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource btnStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=MembersListDataGrid}" Value="0">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </Grid>
                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem x:Name="SpecificMemberTabItem" Header="Specific Member" Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="1" Grid.Column="1" Text="Roles of a specific member" FontSize="28" FontWeight="Bold" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2"/>

                    <Grid Grid.Row="2" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Margin="0 0 15 0"       >
                            <TextBlock Text="Id of member" Foreground="White"/>
                            <TextBox x:Name="SpecificMemberIdTextBox" Text="{Binding MemberId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </Grid>
                    
                    <DataGrid x:Name="SpecificMemberListDataGrid"
                              Grid.Row="3"
                              Grid.Column="1"
                              GridLinesVisibility="None" 
                              Margin="0,15,15,15"
                              CanUserAddRows="False"
                              AutoGenerateColumns="False"
                              BorderThickness="0"
                              SelectionMode="Single"
                              HeadersVisibility="Column"
                              CanUserResizeRows="False"                              
                              ColumnWidth="*" 
                              Background="White">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#5c6fb1"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Role" Binding="{Binding Role.Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Start Date" Binding="{Binding StartDate, StringFormat=dd/MM/yyyy}" IsReadOnly="True"/>
                            <DataGridTemplateColumn Header="End Date" IsReadOnly="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding EndDate, StringFormat=dd/MM/yyyy}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <DatePicker>
                                            <DatePicker.SelectedDate>
                                                <Binding Path="EndDate" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <utils:DateTimeValidationRule ValidatesOnTargetUpdated="True"/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </DatePicker.SelectedDate>
                                        </DatePicker>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Vertical" Margin="0,15,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Button x:Name="SpecificMemberSearchButton" Content="Search" Grid.Row="0" Click="SpecificMemberSearchButton_Click">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource btnStyle}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SpecificMemberIdTextBox}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button x:Name="SpecificMemberUpdateButton" Content="Update" Grid.Row="1" Click="SpecificMemberUpdateButton_Click">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource btnStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=SpecificMemberListDataGrid}" Value="0">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem x:Name="AddMemberRoleTabItem" Header="Add Member Role" Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="1" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="150"/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="AddVisualTree" Grid.Row="1" Grid.Column="1" Background="#2f3136" VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="25"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="150"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Text="Add a Member Role" FontSize="28" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 15" Foreground="White"/>

                            <StackPanel Grid.Row="2" Grid.Column="1" Margin="0 0 15 15">
                                <TextBlock Text="Member Id" Foreground="White"/>
                                <TextBox x:Name="AddMemberIdTextBox" Text="{Binding MemberId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                            <StackPanel Grid.Row="2" Grid.Column="2" Margin="0 0 15 15">
                                <TextBlock Text="Role" Foreground="White"/>
                                <ComboBox x:Name="AddRoleComboBox" DisplayMemberPath="Name" IsSynchronizedWithCurrentItem="True" Loaded="AddRoleComboBox_Loaded"/>
                            </StackPanel>

                            <StackPanel Grid.Row="3" Grid.Column="1" Margin="0 0 15 15">
                                <TextBlock Text="Start Date" Foreground="White"/>
                                <DatePicker x:Name="AddStartDateDatePicker" Validation.ErrorTemplate="{StaticResource errorTemplate}">
                                    <DatePicker.SelectedDate>
                                        <Binding Path="StartDate" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <utils:DateTimeValidationRule ValidatesOnTargetUpdated="True"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </DatePicker.SelectedDate>
                                </DatePicker>
                            </StackPanel>

                            <StackPanel Grid.Row="3" Grid.Column="2" Margin="0 0 15 15">
                                <TextBlock Text="End Date" Foreground="White"/>
                                <DatePicker x:Name="AddEndDateDatePicker"/>
                            </StackPanel>

                            <Button x:Name="AddMemberRoleBtn" Content="Add Member Role" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Width="auto" Margin="0 5 0 0" Click="AddMemberRoleBtn_Click">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource btnStyle}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=AddMemberIdTextBox}" Value="False"/>
                                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=AddStartDateDatePicker}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        
    </Grid>
</UserControl>
