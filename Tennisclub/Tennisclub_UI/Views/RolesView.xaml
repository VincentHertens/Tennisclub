<UserControl x:Class="Tennisclub_UI.Views.RolesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:utils="clr-namespace:Tennisclub_UI.Validations"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="1400" Background="#36393f" Foreground="White">

    <UserControl.Resources>
        <Style x:Key="tabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="Background" Value="#292b2f"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="15 4"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#40444b"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#292b2f"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 0 0 10"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="125"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"  Value="#40444b"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background"  Value="#5c6fb1"/>
                                <Setter Property="Foreground"  Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#40444b"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="textBoxAddStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource errorTemplate}"/>
        </Style>
        <sys:String x:Key="requiredRegex">^\s*$</sys:String>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="50"/>
        </Grid.ColumnDefinitions>

        <TabControl Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3" Background="#36393f" BorderThickness="0">
            <TabItem x:Name="RolesOverviewTabItem" Header="Roles Overview" Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="1" Grid.Column="1" Text="Roles Overview" FontSize="28" FontWeight="Bold" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                    <DataGrid x:Name="RolesListDataGrid"
                      Grid.Row="2" Grid.Column="1"
                      GridLinesVisibility="None"
                      Margin="0,15,15,15"
                      HorizontalAlignment="Stretch" 
                      VerticalAlignment="Stretch"
                      CanUserAddRows="False"
                      AutoGenerateColumns="False"
                      BorderThickness="0"
                      SelectionMode="Single"
                      HeadersVisibility="Column"
                      CanUserResizeRows="False"
                      IsReadOnly="True"                
                      Background="White" Loaded="RolesListDataGrid_Loaded">
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#5c6fb1"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="0.05*"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button x:Name="OverviewUpdateBtn" Content="Update Role" Grid.Column="2" Grid.Row="2" VerticalAlignment="Top" Margin="0 15 0 0" Click="OverviewUpdateBtn_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource btnStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItems.Count, ElementName=RolesListDataGrid}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </Grid>
            </TabItem>
            <TabItem x:Name="AddRoleTabItem" Header="Add Role" Style="{StaticResource tabItemStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="20"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="350"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="350"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="1" Grid.Column="1" Background="#2f3136" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Text="Add a Role" FontSize="28" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 15" Foreground="White"/>

                        <StackPanel Grid.Row="2" Grid.Column="1" Margin="0 0 15 15">
                            <TextBlock Text="Name" Foreground="White"/>
                            <TextBox x:Name="AddNameTextBox" Style="{StaticResource textBoxAddStyle}">
                                <TextBox.Text>
                                    <Binding Path="Name" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <utils:RequiredStringFieldValidationRule Length="20" Pattern="{StaticResource requiredRegex}" ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <Button x:Name="AddRoleBtn" Content="Add Role" Grid.Row="3" Grid.Column="1" Width="auto" Margin="0 5 0 0" Click="AddRoleBtn_Click">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource btnStyle}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=AddNameTextBox}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </Grid>

                </Grid>
            </TabItem>
            <TabItem x:Name="UpdateRoleTabItem" Header="Update Role" Style="{StaticResource tabItemStyle}" Visibility="Hidden">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="350"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="350"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="1" Grid.Column="1" Background="#2f3136" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Text="Update a Role" FontSize="28" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 15" Foreground="White"/>

                        <StackPanel Grid.Row="2" Grid.Column="1" Margin="0 0 15 15">
                            <TextBlock Text="Id of selected role" Foreground="White"/>
                            <TextBox x:Name="RoleIdTextBox" BorderThickness="1" IsReadOnly="True" Opacity="0.6" Text="{Binding Id, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>

                        <StackPanel Grid.Row="3" Grid.Column="1" Margin="0 0 15 15">
                            <TextBlock Text="Name" Foreground="White"/>
                            <TextBox x:Name="UpdateNameTextBox" Style="{StaticResource textBoxAddStyle}">
                                <TextBox.Text>
                                    <Binding Path="Name" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <utils:RequiredStringFieldValidationRule Length="20" Pattern="{StaticResource requiredRegex}" ValidatesOnTargetUpdated="True"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <Button x:Name="UpdateRoleBtn" Content="Update Role" Grid.Row="4" Grid.Column="1" Width="auto" Margin="0 5 0 0" Click="UpdateRoleBtn_Click">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource btnStyle}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=RoleIdTextBox}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=UpdateNameTextBox}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
